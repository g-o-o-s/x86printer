[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_455035712790CE08-if00
restart_method: command

[mcu display_mcu]
serial: /dev/serial/by-id/usb-Klipper_atmega32u4_12345-if00
restart_method: command

[board_pins pro_micro]
mcu: display_mcu
aliases:
    LCD_EN=PE6,
    LCD_RS=PD7,
    LCD_D4=PC6,
    LCD_D5=PD4,
    LCD_D6=PD0,
    LCD_D7=PD1,
    LCD_BEEP=PB5,
    LCD_BTN_EN0=PB4,
    LCD_BTN_EN1=PF7,
    LCD_BTN_EN2=PF6,
    LCD_RESET=PF4,
    LCD_SDSS=PB6,
    LCD_SD_DET=PF5,
    LCD_SCLK=PB1,
    LCD_MISO=PB3,
    LCD_MOSI=PB2,
    LCD_KILL=PD2

[display]
lcd_type: hd44780
hd44780_protocol_init: True
rs_pin: display_mcu:LCD_RS
e_pin: display_mcu:LCD_EN
d4_pin: display_mcu:LCD_D4
d5_pin: display_mcu:LCD_D5
d6_pin: display_mcu:LCD_D6
d7_pin: display_mcu:LCD_D7
encoder_pins: ^display_mcu:LCD_BTN_EN2, ^display_mcu:LCD_BTN_EN1
click_pin: ^!display_mcu:LCD_BTN_EN0
menu_timeout: 10


# The stepper_a section describes the stepper controlling the front
# left tower (at 210 degrees). This section also controls the homing
# parameters (homing_speed, homing_retract_dist) for all towers.
[stepper_a]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 128
rotation_distance: 40
endstop_pin: ^gpio4
homing_speed: 15
#position_endstop: 270
#angle: 210
#arm_length: 227.8380

[tmc2209 stepper_a]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
run_current: 1.0
interpolate: False
# hold_current: 0.6
# stealthchop_threshold: 999999
# diag_pin: ^gpio4
# driver_SGTHRS: 100

###########


[stepper_b]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 128
rotation_distance: 40
endstop_pin: ^gpio3
#position_endstop: 270
#angle: 330
#arm_length: 227.5078

[tmc2209 stepper_b]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
run_current: 1.0
interpolate: False
# hold_current: 0.6
# stealthchop_threshold: 999999
# diag_pin: ^gpio3
# driver_SGTHRS: 100

###########

[stepper_c]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
rotation_distance: 40
microsteps: 128
endstop_pin: ^gpio25
#position_endstop: 270
#angle: 90.000000
#arm_length: 227.5840

[tmc2209 stepper_c]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
run_current: 1.0
interpolate: False
# hold_current: 0.6
# stealthchop_threshold: 999999

[extruder]
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
microsteps: 64
rotation_distance: 1.16148
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: gpio23
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio27
control: pid
pid_Kp: 26.855
pid_Ki: 1.432
pid_Kd: 125.882
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 1.2
interpolate: False
# hold_current: 0.500
# stealthchop_threshold: 999999


[heater_bed]
heater_pin: gpio21
sensor_type: EPCOS 100K B57560G104F
sensor_pin: gpio26
control: pid
min_temp: 0
max_temp: 130
pid_Kp: 70
pid_Ki: 4.414
pid_Kd: 278.948

# Print cooling fan (omit section if fan not present).
# FAN1 port
[fan]
pin: gpio17
shutdown_speed: 1.0

# FAN2 port
[heater_fan hotend_fan]
pin: gpio18
heater: extruder
heater_temp: 40.0
shutdown_speed: 1.0
fan_speed: 1.0

# FAN3 port
[controller_fan psu_fan]
pin: gpio20
shutdown_speed: 1.0
heater: heater_bed
idle_timeout: 60

[temperature_sensor host_cpu]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[printer]
kinematics: delta
#   This option must be "delta" for linear delta printers.
max_velocity: 500
#   Maximum velocity (in mm/s) of the toolhead relative to the
#   print. This parameter must be specified.
max_accel: 3000
#   Maximum acceleration (in mm/s^2) of the toolhead relative to the
#   print. This parameter must be specified.
max_z_velocity: 50
#   For delta printers this limits the maximum velocity (in mm/s) of
#   moves with z axis movement. This setting can be used to reduce the
#   maximum speed of up/down moves (which require a higher step rate
#   than other moves on a delta printer). The default is to use
#   max_velocity for max_z_velocity.
minimum_z_position: -4
#   The minimum Z position that the user may command the head to move
#   to.  The default is 0.
#delta_radius: 108.384973
#   Radius (in mm) of the horizontal circle formed by the three linear
#   axis towers. This parameter may also be calculated as:
#    delta_radius = smooth_rod_offset - effector_offset - carriage_offset
#   This parameter must be provided.

[filament_motion_sensor filament_motion_sensor]
detection_length: 10.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: ^gpio16
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: true
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 20.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#   See the "filament_switch_sensor" section for a description of the
#   above parameters.

# The delta_calibrate section enables a DELTA_CALIBRATE extended
# g-code command that can calibrate the tower endstop positions and
# angles.
[delta_calibrate]
radius: 95
#   Radius (in mm) of the area that may be probed. This is typically
#   the size of the printer bed. This parameter must be provided.
speed: 10
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#manual_probe:
#   If true, then DELTA_CALIBRATE will perform manual probing. If
#   false, then a PROBE command will be run at each probe
#   point. Manual probing is accomplished by manually jogging the Z
#   position of the print head at each probe point and then issuing a
#   NEXT extended g-code command to record the position at that
#   point. The default is false if a [probe] config section is present
#   and true otherwise.

[probe]
pin: ^!gpio22
#z_offset: 0
speed: 1

[bed_mesh]
speed: 10
horizontal_move_z: 10
mesh_radius: 95
mesh_origin: 0, 0
round_probe_count: 5

[firmware_retraction]
retract_length: 1.5
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[gcode_arcs]
resolution: 0.1 
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[save_variables]
filename: /opt/printer_data/config/klipper.vars

[endstop_phase]

[include fluidd.cfg]

[include timelapse.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.081
#*#
#*# [endstop_phase stepper_a]
#*# trigger_phase = 250/512
#*#
#*# [endstop_phase stepper_b]
#*# trigger_phase = 308/512
#*#
#*# [endstop_phase stepper_c]
#*# trigger_phase = 353/512
#*#
#*# [printer]
#*# delta_radius = 108.711819
#*#
#*# [stepper_a]
#*# angle = 210.359317
#*# arm_length = 227.838000
#*# position_endstop = 271.027201
#*#
#*# [stepper_b]
#*# angle = 329.971266
#*# arm_length = 227.507800
#*# position_endstop = 273.380092
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 227.584000
#*# position_endstop = 269.565318
#*#
#*# [delta_calibrate]
#*# height0 = -0.081
#*# height0_pos = 173486.000,175003.000,172550.000
#*# height1 = -0.081
#*# height1_pos = 206611.000,208008.000,155313.000
#*# height2 = -0.081
#*# height2_pos = 170584.000,227195.000,169505.000
#*# height3 = -0.081
#*# height3_pos = 156877.000,202422.000,199952.000
#*# height4 = -0.081
#*# height4_pos = 169059.000,170676.000,207666.000
#*# height5 = -0.081
#*# height5_pos = 195751.000,159224.000,194999.000
#*# height6 = -0.081
#*# height6_pos = 216384.000,171175.000,168725.000
